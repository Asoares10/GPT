Doc Maker GPT (v1)
Download OpenAPI specification:Download

A GPT that allows users to create documents.

Create a document directly with HTML content
Create a document directly with HTML content.

REQUEST BODY SCHEMA: application/json
required
content
required
string (Content)
Content of the document in HTML format

title
required
string (Title)
Title of the document.

Responses
200
Successful Response

RESPONSE SCHEMA: application/json
any
422
Validation Error

RESPONSE SCHEMA: application/json
detail	
Array of objects (Detail)

POST
/create_document_directly_with_html
Request samples
Payload
Content type
application/json

Copy
{
"content": "string",
"title": "string"
}
Response samples
200422
Content type
application/json

Copy
null
Create a document indirectly by prompting a GPT model specialized for longform writing
Create a document indirectly by prompting a GPT model specialized for longform writing

REQUEST BODY SCHEMA: application/json
required
language	
string (Language)
Default: "en"
The two-digit ISO 639-1 code representing the expected human language for the document content.

openaiFileIdRefs	
Array of any (Openaifileidrefs)
Default: []
List of files to use during document generation, such as images or PDF / DOCX / PPTX files for downstream GPT to use for writing document. Each object contains: name - name of the file; id - identifier for the file; mime_type - mime type of the file; download_link - the URL to fetch the file.

pageCount	
integer (Pagecount)
Default: 5
The number of document pages (or number of presentation slides) to generate.

prompt
required
string (Prompt)
Instructions that will be used by a GPT-3.5 model to create the document. The instructions should be detailed and contain important information.

Responses
200
Successful Response

RESPONSE SCHEMA: application/json
any
422
Validation Error

RESPONSE SCHEMA: application/json
detail	
Array of objects (Detail)

POST
/create_document_indirectly_with_gpt
Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"language": "en",
"openaiFileIdRefs": [ ],
"pageCount": 5,
"prompt": "string"
}
Response samples
200422
Content type
application/json

Copy
null
Create a presentation indirectly by prompting a GPT model specialized for generating long presentations
Create a presentation indirectly by prompting a GPT model specialized for generating long presentations

REQUEST BODY SCHEMA: application/json
required
language	
string (Language)
Default: "en"
The two-digit ISO 639-1 code representing the expected human language for the document content.

openaiFileIdRefs	
Array of any (Openaifileidrefs)
Default: []
List of files to use during document generation, such as images or PDF / DOCX / PPTX files for downstream GPT to use for writing document. Each object contains: name - name of the file; id - identifier for the file; mime_type - mime type of the file; download_link - the URL to fetch the file.

pageCount	
integer (Pagecount)
Default: 5
The number of document pages (or number of presentation slides) to generate.

prompt
required
string (Prompt)
Instructions that will be used by a GPT-3.5 model to create the document. The instructions should be detailed and contain important information.

Responses
200
Successful Response

422
Validation Error


POST
/create_pptx_indirectly_with_gpt
Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"language": "en",
"openaiFileIdRefs": [ ],
"pageCount": 5,
"prompt": "string"
}
Response samples
200422
Content type
application/json

Copy
null
Create Resume Endpoint
REQUEST BODY SCHEMA: application/json
required
prompt
required
string (Prompt)
Prompt used to describe the doc creation request. IT IS NOT USED TO CREATE DOC, only to display in UI for user to view later.

resume_content	
string (Resume Content)
Default: ""
Resume content in Markdown format. Do NOT include any of the above information (name, email, phone, location, website url) here; they should be directly placed via their respective fields. When using acronyms, ensure to write out the full term as well. For example, instead of writing 'SEO', write 'Search Engine Optimization (SEO)'.

resume_field_email	
string (Resume Field Email)
Optional: Personal email to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.

resume_field_location	
string (Resume Field Location)
Optional: Location to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.

resume_field_name	
string (Resume Field Name)
Default: ""
Mandatory: Personal name to be placed directly into the resume/cv. Do NOT include it in the formatted_markdown field.

resume_field_phone	
string (Resume Field Phone)
Optional: Phone number to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.

resume_field_website_url	
string (Resume Field Website Url)
Optional: Website URL to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.

title	
string (Title)
Default: "Untitled"
Mandatory: Title of the document.

Responses
200
Successful Response

422
Validation Error


POST
/create_resume
Request samples
Payload
Content type
application/json

Copy
{
"prompt": "string",
"resume_content": "",
"resume_field_email": "string",
"resume_field_location": "string",
"resume_field_name": "",
"resume_field_phone": "string",
"resume_field_website_url": "string",
"title": "Untitled"
}
Response samples
200422
Content type
application/json

Copy
null
Create a new spreadsheet
Create a new spreadsheet given data. Enclose all fields in double quotes.

REQUEST BODY SCHEMA: application/json
required
prompt
required
string (Prompt)
Prompt context for creating spreadsheet - will be shown later in document UI.

sheets
required
Array of objects (Sheets)
List of sheets inside spreadsheet. Each sheet consists of a header row, followed by rows of data

title	
string (Title)
Default: "Untitled"
Mandatory: the title of the spreadsheet. Must be included.

Responses
200
Successful Response

RESPONSE SCHEMA: application/json
any
422
Validation Error

RESPONSE SCHEMA: application/json
detail	
Array of objects (Detail)

POST
/create_spreadsheet
Request samples
Payload
Content type
application/json
{
  "components": {
    "schemas": {
      "CreateDocumentDirectlyWithHtmlRequestV1": {
        "properties": {
          "content": {
            "description": "Content of the document in HTML format",
            "title": "Content",
            "type": "string"
          },
          "title": {
            "description": "Title of the document.",
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "title",
          "content"
        ],
        "title": "CreateDocumentDirectlyWithHtmlRequestV1",
        "type": "object"
      },
      "CreateDocumentIndirectlyWithGptRequestV2": {
        "properties": {
          "language": {
            "default": "en",
            "description": "The two-digit ISO 639-1 code representing the expected human language for the document content.",
            "title": "Language",
            "type": "string"
          },
          "openaiFileIdRefs": {
            "default": [],
            "description": "List of files to use during document generation, such as images or PDF / DOCX / PPTX files for downstream GPT to use for writing document. Each object contains: `name` - name of the file; `id` - identifier for the file; `mime_type` - mime type of the file; `download_link` - the URL to fetch the file.",
            "items": {},
            "title": "Openaifileidrefs",
            "type": "array"
          },
          "pageCount": {
            "default": 5,
            "description": "The number of document pages (or number of presentation slides) to generate.",
            "title": "Pagecount",
            "type": "integer"
          },
          "prompt": {
            "description": "Instructions that will be used by a GPT-3.5 model to create the document. The instructions should be detailed and contain important information.",
            "title": "Prompt",
            "type": "string"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "CreateDocumentIndirectlyWithGptRequestV2",
        "type": "object"
      },
      "CreateSpreadsheetRequest": {
        "properties": {
          "prompt": {
            "description": "Prompt context for creating spreadsheet - will be shown later in document UI.",
            "title": "Prompt",
            "type": "string"
          },
          "sheets": {
            "description": "List of sheets inside spreadsheet. Each sheet consists of a header row, followed by rows of data",
            "items": {
              "$ref": "#/components/schemas/DocmakerSheet"
            },
            "title": "Sheets",
            "type": "array"
          },
          "title": {
            "default": "Untitled",
            "description": "Mandatory: the title of the spreadsheet. Must be included.",
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "prompt",
          "sheets"
        ],
        "title": "CreateSpreadsheetRequest",
        "type": "object"
      },
      "DocmakerSheet": {
        "properties": {
          "content": {
            "default": "",
            "description": "Sheet data content in CSV format. Enclose all fields in double quotes.",
            "title": "Content",
            "type": "string"
          }
        },
        "title": "DocmakerSheet",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "Markdown2ResumeRequest": {
        "properties": {
          "prompt": {
            "description": "Prompt used to describe the doc creation request. IT IS NOT USED TO CREATE DOC, only to display in UI for user to view later.",
            "title": "Prompt",
            "type": "string"
          },
          "resume_content": {
            "default": "",
            "description": "Resume content in Markdown format. Do NOT include any of the above information (name, email, phone, location, website url) here; they should be directly placed via their respective fields. When using acronyms, ensure to write out the full term as well. For example, instead of writing 'SEO', write 'Search Engine Optimization (SEO)'.",
            "title": "Resume Content",
            "type": "string"
          },
          "resume_field_email": {
            "description": "Optional: Personal email to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.",
            "title": "Resume Field Email",
            "type": "string"
          },
          "resume_field_location": {
            "description": "Optional: Location to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.",
            "title": "Resume Field Location",
            "type": "string"
          },
          "resume_field_name": {
            "default": "",
            "description": "Mandatory: Personal name to be placed directly into the resume/cv. Do NOT include it in the formatted_markdown field.",
            "title": "Resume Field Name",
            "type": "string"
          },
          "resume_field_phone": {
            "description": "Optional: Phone number to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.",
            "title": "Resume Field Phone",
            "type": "string"
          },
          "resume_field_website_url": {
            "description": "Optional: Website URL to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.",
            "title": "Resume Field Website Url",
            "type": "string"
          },
          "title": {
            "default": "Untitled",
            "description": "Mandatory: Title of the document.",
            "title": "Title",
            "type": "string"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "Markdown2ResumeRequest",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    }
  },
  "info": {
    "description": "A GPT that allows users to create documents.",
    "title": "Doc Maker GPT",
    "version": "v1"
  },
  "openapi": "3.1.0",
  "paths": {
    "/create_document_directly_with_html": {
      "post": {
        "description": "Create a document directly with HTML content.",
        "operationId": "create_document_directly_with_html",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentDirectlyWithHtmlRequestV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Create a document directly with HTML content",
        "x-openai-isConsequential": false
      }
    },
    "/create_document_indirectly_with_gpt": {
      "post": {
        "description": "Create a document indirectly by prompting a GPT model specialized for longform writing",
        "operationId": "create_document_indirectly_with_gpt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentIndirectlyWithGptRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Create a document indirectly by prompting a GPT model specialized for longform writing",
        "x-openai-isConsequential": false
      }
    },
    "/create_pptx_indirectly_with_gpt": {
      "post": {
        "description": "Create a presentation indirectly by prompting a GPT model specialized for generating long presentations",
        "operationId": "create_pptx_indirectly_with_gpt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentIndirectlyWithGptRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Create a presentation indirectly by prompting a GPT model specialized for generating long presentations",
        "x-openai-isConsequential": false
      }
    },
    "/create_resume": {
      "post": {
        "operationId": "create_resume",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Markdown2ResumeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Create Resume Endpoint",
        "x-openai-isConsequential": false
      }
    },
    "/create_spreadsheet": {
      "post": {
        "description": "Create a new spreadsheet given data. Enclose all fields in double quotes.",
        "operationId": "create_spreadsheet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSpreadsheetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Create a new spreadsheet",
        "x-openai-isConsequential": false
      }
    }
  },
  "servers": [
    {
      "url": "https://gpt.docs.aidocmaker.com"
    }
  ]
}
Copy
Expand allCollapse all
{
"prompt": "string",
"sheets": [
{}
],
"title": "Untitled"
}
Response samples
200422
Content type
application/json

Copy
null
Contact & Business
Disclaimer: Please be aware that we are not the official OpenAI store. We help users find useful GPTs and creators share their GPTs.
